---
type Props = {
  id: string;
};

const { id } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
---

<h2>Comments</h2>

<div id="disqus_thread"></div>

<div
  id="disqus-disclaimer"
  class="disqus-info"
  style="display: none"
  data-url={canonicalURL}
  data-id={"/" + id}
>
  <h3>Cookies</h3>
  <p>
    This website uses a third-party service <a href="https://disqus.com/">Disqus</a> to allow you to
    comment on the posts, and thus third-party cookies. Check out their <a
      href="https://disqus.com/cookie-policy/">Cookie Policy</a
    > if you want to know more.
  </p>

  <p class="question">Is that OK with you?</p>

  <p class="answer">
    <button type="button" id="disqus-disclaimer-yes">Yes, show me comments.</button>
  </p>
  <p class="answer">
    <button type="button" id="disqus-disclaimer-no">No, and don't ask me again.</button>
  </p>
</div>

<div id="disqus-disabled" class="disqus-info" style="display: none">
  <h3>Comments are disabled</h3>

  <p class="answer">
    <button type="button" id="disqus-disabled-what"
      >I changed my mind / what is this about again?</button
    >
  </p>
</div>

<script is:inline={true}>
  window.disqus_config = function () {
    this.page.url = disclaimer?.dataset.url;
    this.page.identifier = disclaimer?.dataset.id;
  };

  const disclaimer = document.getElementById("disqus-disclaimer");
  const disabled = document.getElementById("disqus-disabled");
  const yes = document.getElementById("disqus-disclaimer-yes");
  const no = document.getElementById("disqus-disclaimer-no");
  const what = document.getElementById("disqus-disabled-what");
  const storageKey = "wantsComments";

  function initDisqus() {
    (function () {
      // DON'T EDIT BELOW THIS LINE
      const d = document,
        s = d.createElement("script");

      s.src = "//angelikatyborska.disqus.com/embed.js";

      s.setAttribute("data-timestamp", +new Date());
      (d.head || d.body).appendChild(s);
    })();
  }

  function showDisclaimer() {
    disclaimer.style.display = "block";

    yes.addEventListener("click", function (e) {
      localStorage.setItem(storageKey, "true");
      disclaimer.style.display = "none";
      initDisqus();
      e.preventDefault();
    });

    no.addEventListener("click", function (e) {
      localStorage.setItem(storageKey, "false");
      disclaimer.style.display = "none";
      showDisabled();
      e.preventDefault();
    });
  }

  function showDisabled() {
    disabled.style.display = "block";
    what.addEventListener("click", function (e) {
      disabled.style.display = "none";
      showDisclaimer();
      e.preventDefault();
    });
  }

  if (localStorage.getItem(storageKey) === "true") {
    initDisqus();
  } else if (localStorage.getItem(storageKey) === "false") {
    disabled.style.display = "block";
    what.addEventListener("click", function (e) {
      disabled.style.display = "none";
      showDisclaimer();
      e.preventDefault();
    });
  } else {
    showDisclaimer();
  }
</script>

<style lang="scss">
  @use "../styles/variables";
  @use "../styles/typography";

  .disqus-info {
    background-color: var(--background-color);
    padding: variables.$gap-medium 0;

    > *:first-child {
      margin-top: 0;
    }

    .question {
      font-weight: bold;
    }

    .answer button {
      @include typography.inline-link();
      background: none;
      font: inherit;
      border: 0;
      padding: 0;
      cursor: pointer;
      color: var(--text-color);
    }
  }
</style>
